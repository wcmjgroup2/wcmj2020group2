var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'Group2', 'text': 'team member \n group 2 Repository: \xa0 50833101 \xa0 | Site: \xa0 50833101 \xa0 \xa0許智淵 Repository: \xa0 50833107 \xa0 | Site: \xa0 50833107 \xa0 \xa0許瑋宸 Repository: \xa0 50833108 \xa0 | Site: \xa0 50833108 \xa0 \xa0廖偵佑 Repository: \xa0 50833111 \xa0 | Site: \xa0 50833111 \xa0 \xa0 施奕宏 Repository: \xa0 50833117 \xa0 | Site: \xa0 50833117 \xa0 \xa0 陳智揚 Repository: \xa0 50833119 \xa0 | Site: \xa0 50833119 \xa0 \xa0 廖翊丞 Repository: \xa0 50833122 \xa0 | Site: \xa0 50833122 \xa0 \xa0陳柏均 Repository: \xa0 50833126 \xa0 | Site: \xa0 50833126 \xa0 \xa0魏崇智 Repository: \xa0 50833130 \xa0 | Site: \xa0 50833130 \xa0 \xa0張育銓 Repository: \xa0 50833134 \xa0 | Site: \xa0 50833134 \xa0 \xa0林昆輝 \n', 'tags': '', 'url': 'Group2.html'}, {'title': 'w1-w6', 'text': 'type of computer \n 1.super computer (超級電腦)\xa0 \xa0 batch computation(批次運算) 2.mainframe 伺服器主機 (cluster 叢集) 3.server 伺服器 (實體，虛擬) 4.Personal Computer 5.micro controller (微控制器)\xa0 rasberry pi 樹莓派 (小PC) embedded 嵌入式 6.Mobile phone (手機) \n 建立個人Blogger \n 建立個人Github帳號 \n 建立個人倉儲 \n step 1\xa0 <3 \n 登入 gm 帳號後, 下載 \xa0 https://drive.google.com/open?id=1SvMKQFViJ0mskt20UhSqkjzckB3noSJH \xa0 至 downloads 目錄, 然後以 7zip 解開到 C:\\wcmj2020 目錄下 \n step 2\xa0 <3 \n 解開後的目錄為 c:\\wcmj2020\\wcm2020, 其中有 start.bat 與 stop.bat, 開啟可攜系統時, 以滑鼠點擊 start.bat, 關閉可攜系統時, 以滑鼠點擊 stop.bat \n step 3\xa0 <3 \n 登入以個人學號所建立的 github 帳號, 然後建立 wcmj2020 倉儲. \n step 4\xa0 <3 \n 將遠端的 wcmj2020 以 git clone 取下. \n git clone \xa0 https://github.com/學號/wcmj2020.git \n step 5\xa0 <3 \n git submodule add \xa0 https://github.com/mdecourse/cmsimde \xa0 cmsimde \n step 6\xa0 <3 \n 進入 cmsimde 以 python wsgi.py 啟動動態系統 \n 以瀏覽器 \xa0 https://localhost:9443 \xa0 可以利用 admin 為帳號登入管理 \n step 7\xa0 <3 \n 動態系統維護後, 轉為靜態.再推至遠端 \n \n', 'tags': '', 'url': 'w1-w6.html'}, {'title': '課堂補充', 'text': 'inter-net(網際,inter+network)==inter-national protocol(協定) tcp/ip == transmision control protocol / internet protocol IPv4 version(版本) 4 IP 4個區段，用「.」隔開 IPv6 version 6 IP 8個區段，用「:」隔開 中華電信 dns server 2001:b000:168::1 dns == domain name server 符號名稱伺服器 \n', 'tags': '', 'url': '課堂補充.html'}, {'title': 'W7-W9', 'text': '下載可攜程式系統利用\xa0 git 指令建立 cmsimde 網站 \n 重新下載 \xa0 wcmj2020_tool.7z , 檔案大小為 435 MB, 解開壓縮後為 1.8 GB (其中包括 Mypaint, Dia 與 OBS 等).學會利用 ShareX 與 OBS 拍攝螢幕操作影片, 並將個人維護倉儲與網站的過程影片放入個人網站中. \n \n \n \n', 'tags': '', 'url': 'W7-W9.html'}]};