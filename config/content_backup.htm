<h1>About  </h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop  </h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<p></p>
<h1>Group2  </h1>
<p>team member</p>
<p><span>group 2</span><br/><span>Repository:<span> </span></span><a href="https://github.com/50833101/wcmj2020">50833101</a><span><span> </span>| Site:<span> </span></span><a href="https://50833101.github.io/wcmj2020">50833101</a>   許智淵<br/><span>Repository:<span> </span></span><a href="https://github.com/50833107/wcmj2020">50833107</a><span><span> </span>| Site:<span> </span></span><a href="https://50833107.github.io/wcmj2020">50833107</a>   許瑋宸<br/><span>Repository:<span> </span></span><a href="https://github.com/50833108/wcmj2020">50833108</a><span><span> </span>| Site:<span> </span></span><a href="https://50833108.github.io/wcmj2020">50833108</a>   廖偵佑<br/><span>Repository:<span> </span></span><a href="https://github.com/50833111/wcmj2020">50833111</a><span><span> </span>| Site:<span> </span></span><a href="https://50833111.github.io/wcmj2020">50833111</a>    施奕宏<br/><span>Repository:<span> </span></span><a href="https://github.com/50833117/wcmj2020">50833117</a><span><span> </span>| Site:<span> </span></span><a href="https://50833117.github.io/wcmj2020">50833117</a>    陳智揚<br/><span>Repository:<span> </span></span><a href="https://github.com/50833119/wcmj2020">50833119</a><span><span> </span>| Site:<span> </span></span><a href="https://50833119.github.io/wcmj2020">50833119</a>    廖翊丞<br/><span>Repository:<span> </span></span><a href="https://github.com/50833122/wcmj2020">50833122</a><span><span> </span>| Site:<span> </span></span><a href="https://50833122.github.io/wcmj2020">50833122</a>   陳柏均<br/><span>Repository:<span> </span></span><a href="https://github.com/50833126/wcmj2020">50833126</a><span><span> </span>| Site:<span> </span></span><a href="https://50833126.github.io/wcmj2020">50833126</a>   魏崇智<br/><span>Repository:<span> </span></span><a href="https://github.com/50833130/wcmj2020">50833130</a><span><span> </span>| Site:<span> </span></span><a href="https://50833130.github.io/wcmj2020">50833130</a>   張育銓<br/><span>Repository:<span> </span></span><a href="https://github.com/50833134/wcmj2020">50833134</a><span><span> </span>| Site:<span> </span></span><a href="https://50833134.github.io/wcmj2020">50833134</a>   林昆輝</p>
<h2>w1-w6</h2>
<h4>type of computer</h4>
<p>1.super computer (超級電腦)    batch computation(批次運算)<br/>2.mainframe 伺服器主機 (cluster 叢集)<br/>3.server 伺服器 (實體，虛擬)<br/>4.Personal Computer<br/>5.micro controller (微控制器)  rasberry pi 樹莓派 (小PC) embedded 嵌入式<br/>6.Mobile phone (手機)</p>
<h4><span>建立個人Blogger</span></h4>
<h4><span>建立個人Github帳號</span></h4>
<h4>建立個人倉儲</h4>
<h5>step 1  &lt;3</h5>
<h5>登入 gm 帳號後, 下載<span> </span><a href="https://drive.google.com/open?id=1SvMKQFViJ0mskt20UhSqkjzckB3noSJH" rel="nofollow">https://drive.google.com/open?id=1SvMKQFViJ0mskt20UhSqkjzckB3noSJH</a><span> </span>至 downloads 目錄, 然後以 7zip 解開到 C:\wcmj2020 目錄下</h5>
<h5>step 2  &lt;3</h5>
<h5>解開後的目錄為 c:\wcmj2020\wcm2020, 其中有 start.bat 與 stop.bat, 開啟可攜系統時, 以滑鼠點擊 start.bat, 關閉可攜系統時, 以滑鼠點擊 stop.bat</h5>
<h5>step 3  &lt;3</h5>
<h5>登入以個人學號所建立的 github 帳號, 然後建立 wcmj2020 倉儲.</h5>
<h5>step 4  &lt;3</h5>
<h5>將遠端的 wcmj2020 以 git clone 取下.</h5>
<h5>git clone<span> </span><a href="https://github.com/%E5%AD%B8%E8%99%9F/wcmj2020.git">https://github.com/學號/wcmj2020.git</a></h5>
<h5>step 5  &lt;3</h5>
<h5>git submodule add<span> </span><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a><span> </span>cmsimde</h5>
<h5>step 6  &lt;3</h5>
<h5>進入 cmsimde 以 python wsgi.py 啟動動態系統</h5>
<h5>以瀏覽器<span> </span><a href="https://localhost:9443/" rel="nofollow">https://localhost:9443</a><span> </span>可以利用 admin 為帳號登入管理</h5>
<h5>step 7  &lt;3</h5>
<h5>動態系統維護後, 轉為靜態.再推至遠端</h5>
<p></p>
<h2>課堂補充</h2>
<p>inter-net(網際,inter+network)==inter-national<br/>protocol(協定)<br/>tcp/ip == transmision control protocol / internet protocol<br/>IPv4 version(版本) 4 IP 4個區段，用「.」隔開<br/>IPv6 version 6 IP 8個區段，用「:」隔開<br/>中華電信 dns server 2001:b000:168::1<br/>dns == domain name server 符號名稱伺服器</p>
<h2>W7-W9</h2>
<p><span>下載可攜程式系統利用  git 指令建立 cmsimde 網站<br/></span></p>
<p>重新下載<span> </span><a href="https://drive.google.com/open?id=1xDTDfcHU18ipqZNbOufMkSZqibqNeL2T">wcmj2020_tool.7z</a>, 檔案大小為 435 MB, 解開壓縮後為 1.8 GB (其中包括 Mypaint, Dia 與 OBS 等).學會利用 ShareX 與 OBS 拍攝螢幕操作影片, 並將個人維護倉儲與網站的過程影片放入個人網站中.</p>
<p></p>
<p></p>
<p></p>
<p></p>